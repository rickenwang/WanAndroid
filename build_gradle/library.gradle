// apply plugin: 'com.android.library'
// apply plugin: 'kotlin-android'
// apply plugin: 'kotlin'
// apply plugin: 'kotlin-kapt'
// apply plugin: 'kotlin-android-extensions' // todo 这个插件好像过时了，要去掉它


apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

android {

    compileSdkVersion rootProject.version_config.compileSdkVersion
    resourcePrefix "${name}_"//所有的 module 必须以自己的模块开头命名
    defaultConfig {
        minSdkVersion rootProject.version_config.minSdkVersion
        targetSdkVersion rootProject.version_config.targetSdkVersion
        versionCode rootProject.version_config.versionCode
        versionName rootProject.version_config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    compileOptions {
        sourceCompatibility rootProject.version_config.sourceCompatibility
        targetCompatibility rootProject.version_config.targetCompatibility
    }

    //kotlinOptions {
    //    jvmTarget = rootProject.version_config.jvmTarget
    // }

    packagingOptions {
        // More than one file was found with OS independent path 'META-INF/setting_debug.kotlin_module'.
        exclude 'META-INF/setting_debug.kotlin_module'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

kapt {
    arguments {
        arg("moduleName", project.getName())
    }
}
dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.version_config.kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$rootProject.version_config.kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.version_config.coroutine_version"

    implementation "androidx.core:core-ktx:$rootProject.version_config.androidx_core"
    implementation "androidx.appcompat:appcompat:$rootProject.version_config.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.version_config.constraintlayout"
    implementation "androidx.multidex:multidex:$rootProject.version_config.multidex"
    implementation "androidx.recyclerview:recyclerview:$rootProject.version_config.recyclerview"
    implementation "com.google.android.material:material:$rootProject.version_config.material"


//    if (project.getPath() != ":base:log") {
//        api project(':base:log')
//    }

    //测试相关
    testImplementation "junit:junit:$rootProject.version_config.junit"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.version_config.android_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.version_config.espresso_core"
    // testImplementation for pure JVM unit tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.version_config.coroutine_version"
    // androidTestImplementation for Android instrumentation tests
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.version_config.coroutine_version"

}
